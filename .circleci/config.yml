version: 2
jobs:
  develop-branch:
    working_directory: ~/project/app # directory where steps will run
    docker:
      - image: circleci/node:7.10
    environment:
      APP_NAME: lew-dev
      APP_DOMAIN: app.cloud.gov
      CF_ORG: epa-surface-water
      CF_SPACE: owtbx-dev
    steps:
      - checkout:
          path: ~/project
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install npm
          command: 'npm install'
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: test
          command: npm test
      - run: 
          name: Install Sonarqube scanner
          command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
            unzip sonar-scanner-cli-3.3.0.1492-linux.zip
      - run:
          name: Run Sonarqube scanner
          command: |
            ./sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner -Dsonar.projectKey=lew -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_TOKEN
      - run:
          name: Setup Cloud Foundry CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v
            cf api https://api.fr.cloud.gov  
            cf auth "$CF_USER_DEV" "$CF_PASSWORD_DEV"
            cf target -o "$CF_ORG" -s "$CF_SPACE"
      - run:
          name: Deploy application to Cloud.gov
          command: |
            cf push --no-start $APP_NAME-green -f manifest-dev.yml -p . -n green
      - run:
          name: Start application on Cloud.gov and clean routes
          command: |
            cf start $APP_NAME-green
            cf unmap-route $APP_NAME-green $APP_DOMAIN -n green
            cf delete-route app.cloud.gov -n green -f
      - run:
          name: Re-route green to blue and then remove blue
          command: |
            cf map-route $APP_NAME-green $APP_DOMAIN -n $APP_NAME
            cf unmap-route $APP_NAME $APP_DOMAIN -n $APP_NAME
            cf stop $APP_NAME
            cf delete $APP_NAME -f
            cf rename $APP_NAME-green $APP_NAME

  stage-branch:
    docker:
      - image: circleci/node:7.10
    environment:
      APP_NAME: lew-stage
      APP_DOMAIN: app.cloud.gov
      CF_ORG: epa-surface-water
      CF_SPACE: owtbx-staging
    steps:
      - checkout
      - run: 
          name: Run node based tests
          command: |
            cd app
            npm test
      - run:
          name: Setup Cloud Foundry CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v
            cf api https://api.fr.cloud.gov  
            cf auth "$CF_USER_STAGING" "$CF_PASSWORD_STAGING"
            cf target -o "$CF_ORG" -s "$CF_SPACE"
      - run:
          name: Deploy application to Cloud.gov
          command: |
            cd app
            cf push --no-start $APP_NAME-green -f manifest-staging.yml -p . -n green
      - run:
          name: Start application on Cloud.gov and clean routes
          command: |
            cf start $APP_NAME-green
            cf unmap-route $APP_NAME-green $APP_DOMAIN -n green
            cf delete-route app.cloud.gov -n green -f
      - run:
          name: Re-route green to blue and then remove blue
          command: |
            cf map-route $APP_NAME-green $APP_DOMAIN -n $APP_NAME
            cf unmap-route $APP_NAME $APP_DOMAIN -n $APP_NAME
            cf stop $APP_NAME
            cf delete $APP_NAME -f
            cf rename $APP_NAME-green $APP_NAME

workflows:
  version: 2
  main:
    jobs:
      - develop-branch:
          filters:
            branches:
              only: develop
      - stage-branch:
          filters:
            branches:
              only: staging